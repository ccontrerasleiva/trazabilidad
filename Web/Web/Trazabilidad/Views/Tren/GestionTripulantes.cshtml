@*@model ViewModels.Models.Tren
    @{
        ViewBag.Title = "Gestión Diaria de Trenes";
        ViewBag.Header = "Gestión Diaria de Trenes";

        var servicios = ViewBag.Servicios;
    }*@

@model IEnumerable<ViewModels.Models.TripulantePersona>
@{
    ViewBag.Title = "Gestión  de Tripulantes";
    ViewBag.Header = "Gestión  de Tripulantes";
    //var servicios = ViewBag.Servicios;
}
@*BARRA SUPERIOR*@
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-sm-8">
        <h2>@ViewBag.Header</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Home")">Inicio</a>
            </li>
            <li class="active">
                <strong>@ViewBag.Header</strong>
            </li>
        </ol>
    </div>
    <div class="row">
        <div class="col-sm-12">

            <div class="ibox-content bg-success">
                <!-- Pendiente -->
                <h2 style="margin:0;">Tripulantes con actividades del día @Html.Raw(DateTime.Now.ToShortDateString()) </h2>
            </div>
        </div>
    </div>
</div>
<div id="TrenSuprime"></div>
<div id="locomotiveEdit"></div>
<div id="locomotiveDelete"></div>
<div id="locomotiveEditLoc"></div>
<div id="locomotiveEditTrip"></div>
<div id="TrenHora"></div>
@*RESTO DE LA PAGINA*@
<div class="wrapper wrapper-content">
    <div class="row">
        <div class="col-sm-12">

            <div class="ibox-content">
                @*<h1 style="text-align:left;">Tripulantes del Dia </h1>*@
                <div class="clearfix" style="text-align:right;">
                    
                    <strong>Filtrar por Base de Origen de Los Tripulantes</strong>
                    <select class="form-control filter-button-group chosen-select">
                        
                        <option style="text-align:center;" data-filter="*" selected>Mostrar de todas las Bases</option>
                        @foreach (var item in ViewBag.Bases)
                        {
                            var Nombre = item.Text;
                            var idBase = item.Value;

                            <option style="text-align:left;" data-filter=".@Nombre ">@Nombre.Replace('-', ' ')</option>
                        }
                    </select>


                </div>

                <div class="Gestion">
                    @if (Model != null && Model.Count() > 0)
                    {

                        foreach (var news in Model)
                        {
                            @Html.Partial("GestionTripulante/_TripulantesDiario2", news)
                        }
                    }

                </div>

            </div>
        </div>
    </div>
    @*<div class="row">
            <div class="col-lg-12">
                <div id="partialDiv">

                    @foreach (var tTime in Model)
                    {
                        @Html.Partial("GestionTripulante/_TripulantesDiario", tTime)
                    }
                </div>
            </div>
        </div>*@
</div>


@*MODAL*@
@*@Html.Partial("Partial/_Create", new ViewModels.Models.Tiempo_Hapa())*@
@section Scripts{

    <script src="~/Scripts/Modal.Gestion.js"></script>

    <script src="~/Scripts/chosen.jquery.min.js"></script>
    <script>$('.chosen-select').chosen({ width: "14%" });</script>

    <script src="https://unpkg.com/isotope-layout@2/dist/isotope.pkgd.min.js"></script>
    <script>


        $(document).ready(function () {
            var $grid = $('.Gestion').isotope({
                // options
                itemSelector: '.GestionTrip',
                layoutMode: 'fitRows',
                getSortData: {
                    time: function ($elem) {
                        var fecha = new Date($($elem).find('.date').attr('data-date'));
                        return fecha;

                    }
                },
                sortBy: 'time'
                //$grid.isotope('layout')
            });

            $('.filter-button-group').change(function () {
                var filterValue = $(this).find('option:selected').attr('data-filter');
                $grid.isotope({
                    filter: filterValue,
                });

            });
            var $optionSets = $('.option-set'),
                $optionLinks = $optionSets.find('a');

            $optionLinks.click(function () {
                var $this = $(this);
                // don't proceed if already selected
                if ($this.hasClass('selected')) {
                    return false;
                }
                var $optionSet = $this.parents('.option-set');
                $optionSet.find('.selected').removeClass('selected');
                $this.addClass('selected');

                // make option object dynamically, i.e. { filter: '.my-filter-class' }
                var options = {},
                    key = $optionSet.attr('data-option-key'),
                    value = $this.attr('data-option-value');
                // parse 'false' as false boolean
                value = value === 'false' ? false : value;
                options[key] = value;
                if (key === 'layoutMode' && typeof changeLayoutMode === 'function') {
                    // changes in layout modes need extra logic
                    changeLayoutMode($this, options);
                } else {
                    // otherwise, apply new options
                    $grid.isotope(options);
                }

                return false;
            });


            $('.filter-button-group').on('click', 'button', function () {
                var filterValue = $(this).attr('data-filter');
                // use filterFn if matches value
                $grid.isotope({ filter: filterValue });

            });

            $('.toggler').click(function (event) {
                event.preventDefault();
                $(this).parent().siblings('.toggled').slideToggle(-300);
                $grid.isotope('layout');
            });

            $('.toggled').click(function (event) {
                event.preventDefault();
                $(this).parent().siblings('.toggler').slideToggle(300);

            })

        });

                //Fix para el acordeón

                //$grid.on('click', '.ibox-title', function (event) {
                //    var $title = $(event.currentTarget);
                //    var $colourItem = $title.parents('.accordion-head');
                //    var isOpen = $colourItem.hasClass('toggler');
                //    // close other accordion
                //    $grid.find('.toggler').removeClass('toggler')
                //        .find('.toggler').slideUp('normal', layoutIsotope);
                //    if (!isOpen) {
                //        $colourItem.addClass('toggler')
                //            .find('.toggler').slideDown('normal', layoutIsotope);
                //    }
                //});

                //function layoutIsotope() {
                //    $grid.isotope('layout');
                //}


    </script>
    @*<script type="text/javascript">
            function SelectedIndexChanged(valor) {
                var url = '@Url.Action(nameof(Trazabilidad.Controllers.TrenController.ListById))' + "/" + valor.value;
                $.ajax({
                    type: "GET",
                    url: '../Tren/ListById' + "/" + valor.value,
                    success: function (result) {
                        if (result.success) {
                            if (result.data == null) {

                                toastr.error(msg, "rror");
                            }
                            else {
                                $("#partialDiv").html(result);
                                toastr.success(result.message, "rror");
                            }
                        }
                        else {
                            toastr.error(result.message,"rror");
                        }
                    },
                    error: function (result) {
                        toastr.error('@($"{Resources.Strings.Errors.UnknownError} {Resources.Strings.Errors.ErrorNotified}")', '@Resources.Strings.Models.Tren');
                    }
                });
            }
        </script>*@
    @*<script>
            $('.toggler').click(function (event) {
                event.preventDefault();
                $(this).parent().siblings('.toggled').slideToggle(300);
            });
        </script>*@


}

@section Styles{
    <style>
        .Gestion {
            padding: 15px 0;
        }

        .GestionTrip {
            padding: 10px;
            border-bottom: 1px solid #eee;
            width: 100%;
        }
    </style>
    <style>
        .toggled {
            display: none;
        }
    </style>
    @*<link rel="stylesheet" href="~/Content/bootstrap-chosen.css" />*@
    <link href="~/Content/bootstrap-chosen.css" type="text/css" rel="stylesheet" />
    <style>
        #page-wrapper {
            /*width: 100% !important;*/
            align-content:center;
        }
        
    </style>
}